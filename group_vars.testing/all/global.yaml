---
repositories:
  registry_community: harbor.cloudical.net
  registry_commercial: harbor.cloudical.net
  package_repository:  https://repo.vanillastack.cloudical.net
ingress:
  namespace: nginx-ingress
  enabled: true
  chartVersion: "3.25.0"
kubernetes:
  dashboard:
    coreDomain: "k8sboard.{{ clusterTLDomain }}"
    chartVersion: "4.0.3"
  clusterName: kube
  version: "1.20"
  crioVersion: "1.20"
  helm_version: "v3.5.3"
  init_opts: ""
  kubeadm_opts: ""
  kubeadmin_config: /etc/kubernetes/admin.conf
  cilium:
    version: v1.10.3
cloudfoundry:
  version: 2.7.12
  storageclass: rook-ceph-block
  coreDomain: "cf.{{ clusterTLDomain }}"
stratos:
  version: 4.4.0
  tag:  4.4.0-bc65c315c
  namespace: stratos
  adminpassword: 4JOA4l8DK7Sr
  coreDomain: "stratos.{{ clusterTLDomain }}"
  uaa:
    encryptionKey: xry5RPkqPABkdoW22mcLLpvsY
    adminKey: K0Wk7VVyKQBMvEyihFZ2Zt9E5
guacamole:
  imageTag: 202009100849
  namespace: guacamole
  coreDomain: "guacamole.{{ clusterTLDomain }}"
  postgres:
    maxConnections: 400
    backup:
      enabled: false
      cronjob: "30 */2 * * *"
    version: "12"
    replicas: "2"
    size: "20Gi"
postgresOperator:
  chartName: "postgres-operator"
  chartVersion: "1.5.0"
  namespace: "postgres-operator"
  backup:
    enabled: false
    s3:
      accessKey: nul
      secretKey: nul
      regionName: nul
      endpoint: nul
      bucketName: nul
    cron: "30 00 * * *"
redis:
  environment: test
  cluster: true
  enabled: true
  chartVersion: 4.3.1
  password: "Opstree@1235"
  persistence:
    storageClass: "rook-ceph-block"
    size: 15Gi
  namespace: "redis"
harbor:
  chartVersion: 1.5.1
  namespace: harbor
  ingress:
    coreDomain: "harbor.{{ clusterTLDomain }}"
    notaryDomain: "notary.{{ clusterTLDomain }}"
  tls:
    enabled: true
  portal:
    replicas: 1
  core:
    replicas: 1
  jobservice:
    replicas: 1
    persistence:
      storageClass: rook-ceph-block
      size: 15Gi
  registry:
    replicas: 1
    persistence:
      storageClass: rook-ceph-block
      size: 10Gi
  chartmuseum:
    enabled: true
    replicas: 1
    persistence:
      storageClass: rook-ceph-block
      size: 5Gi
  clair:
    enabled: true
    replicas: 1
  trivy:
    enabled: true
    replicas: 1
    persistence:
      storageClass: rook-ceph-block
      size: 5Gi
  notary:
    enabled: true
    replicas: 1
  auth:
    password: 02ZVPokFHXPHfSfkfQGCWIfmJ
    # secret lenght must be 16
    secret: p1zX2AazSCwtUfmv
  redis:
    chartVersion: 10.8.1
    password: zP7GPoCnFNa6XiVnsLVJ3jJgw
    persistence:
      storageClass: "rook-ceph-block"
      size: 8Gi
  postgres:
    size: "20Gi"
    replicas: 2
    version: "12"
    maxConnections: 400
    resources:
      requests:
        cpu: "10m" #default 10m
        memory: "100Mi" #default 100Mi
      limits:
        cpu: "20m" #default 500m
        memory: "200Mi" #default 500Mi
    backup:
      enabled: false
      cronjob: "30 */2 * * *"
efkstack:
  kibana:
    imageTag: "7.9.1"
    user: kibana_test
    password: secretlysecretpassword
    replicas: 2
    system_user: "{{ ansible_user }}"
    system_group: "{{ ansible_user }}"
    coreDomain: "kibana.{{ clusterTLDomain }}"
    resources:
      requests:
        cpu: "200m"
        memory: "1Gi"
      limits:
        cpu: "1000m"
        memory: "2Gi"
  es:
    imageTag: "7.9.1"
    replicas: 3
    storage:
      class_name: "rook-ceph-block"
      size: "30Gi"
    resources:
      requests:
        cpu: "200m"
        memory: "2Gi"
      limits:
        cpu: "1000m"
        memory: "2Gi"
  logaggregator:
    # Choice of filebeat and fluentd
    name: filebeat
    imageTag: "7.9.1"
    resources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "100m"
        memory: "200Mi"
monitoring:
  admin_user: admin
  admin_password: prompassword
  replicas: 2
  chartVersion: 13.4.1
  retention: 360h
  ingress:
    enabled: true
    dns: "prometheus.{{ clusterTLDomain }}"
  storage:
    classname: "rook-ceph-block"
    size: 30Gi
  resources:
    limits:
      cpu: 2500m
      memory: 2048Mi
    requests:
      cpu: 200m
      memory: 512Mi
  kubeApiServer:
    enabled: true
  kubelet:
    enabled: true
  kubeControllerManager:
    enabled: true
  coreDns:
    enabled: true
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: true
  kubeScheduler:
    enabled: true
  kubeProxy:
    enabled: true
  kubeStateMetrics:
    enabled: true
  additionalRules: {}
alertmanager:
  enabled: true
  admin_user: admin
  admin_password: ampassword
  replicas: 2
  ingress:
    enabled: true
    dns: "alertmanager.{{ clusterTLDomain }}"
  storage:
    classname: "rook-ceph-block"
    size: 10Gi
  resources:
    limits:
      cpu: 2500m
      memory: 2048Mi
    requests:
      cpu: 200m
      memory: 512Mi
  config: |
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          alertname: Watchdog
        receiver: 'null'
    receivers:
    - name: 'null'
grafana:
  namespace: grafana
  chartVersion: 6.2.1 
  replicas: 1
  enabled: true
  admin_user: admin
  admin_password: grafanapassword
  ingress:
    enabled: true
    dns: "grafana.{{ clusterTLDomain }}"
loki:
  namespace: loki
  chartVersion: 2.3.1
  replicas: 1
  monitoring:
    enabled: true
  persistence:
    enabled: true
    size: 30Gi
    storageClass: rook-ceph-block
kubevirt:
  namespace: kubevirt
  version: v0.33.0
moodle:
  username: admin
  namespace: moodle
  storage:
    classname: "rook-ceph-block"
    size: 8Gi
  mariadb:
    persistence: true
    classname: "rook-ceph-block"
    size: 8Gi
  ingress:
    enabled: true
    dns: "moodle.{{ clusterTLDomain }}"
keycloak:
  namespace: keycloak
  externalDatabase: false
  postgres:
    size: "20Gi"
    replicas: 2
    version: "12"
    maxConnections: 400
    backup:
      enabled: false
      cronjob: "30 */2 * * *"
  ingress:
    enabled: true
    publicDomain: "keycloak.{{ clusterTLDomain }}"
  realm:
    name: "{{ clusterTLDomain }}"
    id: "{{ clusterTLDomain }}"
nextcloud:
  version: 20.0.4
  chartVersion: 2.5.0
  replicas: 1
  use_hpa: true
  ingress:
    enabled: true
    publicDomain: "{{ nextcloud_instancename }}.{{ clusterTLDomain }}"
  mail:
    enabled: false
    fromAddress: user
    domain: domain.com
    smtp:
      host: domain.com
      port: 465
      authtype: LOGIN
      name: user
      password: pass
  nginx:
    version: 1.19.2-alpine
  postgresql:
    name: nextcloud-postgresql
  collabora:
    ingress:
      enabled: true
      publicDomain: "{{ nextcloud_instancename }}office.{{ clusterTLDomain }}"
  redis:
    name: redis-master
    chartVersion: 10.8.1
    persistence:
      storageClass: "rook-ceph-block"
      size: 8Gi
