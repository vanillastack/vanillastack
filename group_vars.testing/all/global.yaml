---
repositories:
  registry_community: harbor.cloudical.net
  registry_community_helm: harbor.cloudical.net
  registry_commercial: harbor.cloudical.net
  registry_commercial_helm: harbor.cloudical.net
  # only for debian installs:
  package_repository: https://repo.vanillastack.cloudical.net
ingress:
  namespace: nginx-ingress
  enabled: true
  config: {}
  replicas: 3
  chartVersion: "4.6.0"
  defaultBackend:
    replicas: 1
  ## check values yaml for resource recommendation
  resources:
    limits:
      cpu: "1000m" #default "5000m"
      memory: "2Gi" #default "6Gi"
    requests:
      cpu: "500m" #default "2000m"
      memory: "1Gi" #default "6Gi"
kubernetes:
  dashboard:
    coreDomain: "k8sboard.{{ clusterTLDomain }}"
    chartVersion: "6.0.6"
    replicas: 2
  clusterName: kubernetes
  # if you define a version without a specific patch it will take the latest (for example: 1.25 results in 1.25.9)
  version: "1.25"
  crioVersion: "1.25"
  crioRuncVersion: "1.0.1~2"
  helm_version: "3.11.2"
  init_opts: ""
  kubeadm_opts: ""
  drainTimeout: "10m"
  updateSleepSeconds: 90
  ignoreDrainErrors: true
  cilium:
    version: v1.11.2
    waitTimeout: 120s
    proxyReplacement: "strict" #possible values: "disabled", "probe", "partial", "strict"
    manual_mtu: 0 # This Value Sets the MTU for cilium and applies it to a deamonset watching the mtu
  ignorePreflightErrors: []
postgresOperator:
  chartName: "postgres-operator"
  chartVersion: "v1.9.0"
  namespace: "postgres-operator"
  backup:
    enabled: false
    s3:
      accessKey: ""
      secretKey: ""
      regionName: ""
      endpoint: ""
      bucketName: ""
      encryption: ""
      retention: ""
    cron: "30 00 * * *"
harbor:
  enabled: true
  chartVersion: 1.11.1
  namespace: harbor
  ingress:
    coreDomain: "harbor.{{ clusterTLDomain }}"
    notaryDomain: "notary.{{ clusterTLDomain }}"
  tls:
    enabled: true
  portal:
    replicas: 1
  core:
    replicas: 1
  jobservice:
    replicas: 1
    persistence:
      storageClass: rook-cephfs
      accessMode: ReadWriteMany
      size: 15Gi
  registry:
    replicas: 1
    persistence:
      storageClass: rook-cephfs
      accessMode: ReadWriteMany
      size: 10Gi
  chartmuseum:
    enabled: true
    replicas: 1
    persistence:
      storageClass: rook-cephfs
      accessMode: ReadWriteMany
      size: 5Gi
  clair:
    enabled: true
    replicas: 1
  trivy:
    enabled: true
    replicas: 1
    persistence:
      storageClass: rook-cephfs
      accessMode: ReadWriteMany
      size: 5Gi
  notary:
    enabled: true
    replicas: 1
  auth:
    password: 02ZVPokFHXPHfSfkfQGCWIfmJ
    # secret lenght must be 16
    secret: p1zX2AazSCwtUfmv
  redis:
    chartVersion: 17.9.2
    password: zP7GPoCnFNa6XiVnsLVJ3jJgw
    persistence:
      storageClass: "rook-ceph-block"
      size: 8Gi
  postgres:
    size: "20Gi"
    replicas: 2
    version: "15"
    maxConnections: 400
    resources:
      requests:
        cpu: "10m" #default 10m
        memory: "100Mi" #default 100Mi
      limits:
        cpu: "500m" #default 500m
        memory: "500Mi" #default 500Mi
    backup:
      enabled: false
      cronjob: "30 */2 * * *"
metricsServer:
  namespace: monitoring
  chartVersion: 3.8.2
  imageTag: 0.6.1
keycloak:
  namespace: keycloak
  externalDatabase: false
  postgres:
    size: "20Gi"
    replicas: 2
    version: "12"
    maxConnections: 400
    backup:
      enabled: false
      cronjob: "30 */2 * * *"
  ingress:
    enabled: true
    publicDomain: "keycloak.{{ clusterTLDomain }}"
  realm:
    name: "{{ clusterTLDomain }}"
    id: "{{ clusterTLDomain }}"
