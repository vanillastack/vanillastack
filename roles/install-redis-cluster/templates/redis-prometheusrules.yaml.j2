apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: "redis-{{ redis.environment | default('testing') }}"
  namespace: "{{ redis.namespace }}"
  labels:
    app: kube-prometheus-stack
    release: prometheus-operator
spec:
  groups:
  - name: redis
    rules:
      - alert: RedisDown
        expr: 'redis_up{service="redis-{{ redis.environment | default('testing') }}-metrics"} == 0'
        for: 2m
        labels:
          severity: error
        annotations:
{% raw %}
          summary: 'Redis(TM) instance {{ "{{ $instance }}" }} down'
          description: 'Redis(TM) instance {{ "{{ $instance }}" }} is down.'
{% endraw %}
      - alert: RedisDisconnectedSlaves
        expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1
        for: 0m
        labels:
          severity: critical
        annotations:
{% raw %}
          summary: Redis disconnected slaves (instance {{ $labels.instance }})
          description: "Redis not replicating for all slaves. Consider reviewing the redis replication status.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
{% endraw %}
      - alert: RedisReplicationBroken
        expr: delta(redis_connected_slaves[1m]) < 0
        for: 0m
        labels:
          severity: critical
        annotations:
{% raw %}
          summary: Redis replication broken (instance {{ $labels.instance }})
          description: "Redis instance lost a slave\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
{% endraw %}
      - alert: RedisClusterFlapping
        expr: changes(redis_connected_slaves[1m]) > 1
        for: 2m
        labels:
          severity: critical
        annotations:
{% raw %}
          summary: Redis cluster flapping (instance {{ $labels.instance }})
          description: "Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
{% endraw %}
