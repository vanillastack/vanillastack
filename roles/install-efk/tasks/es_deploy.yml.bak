---
- name: Create elasticsearch headless service
  k8s:
    wait: yes
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: elasticsearch
        namespace: kube-logging
        labels:
          app: elasticsearch
      spec:
        serviceAccount: elastic
        serviceAccountName: elastic
        selector:
          app: elasticsearch
        ports:
          - port: 9200
            name: rest
          - port: 9300
            name: inter-node

- name: Create elasticsearch statefulset
  k8s:
    wait: yes
    wait_condition:
      status: yes
    wait_timeout: 720
    state: present
    definition:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: es-cluster
        namespace: kube-logging
      spec:
        serviceName: elasticsearch
        replicas: 3
        selector:
          matchLabels:
            app: elasticsearch
        template:
          metadata:
            labels:
              app: elasticsearch
          spec:
            containers:
            - name: elasticsearch
              image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
              resources:
                  limits:
                    cpu: "{{ es.resources.limits.cpu }}"
                  requests:
                    cpu: "{{ es.resources.requests.cpu }}"
              ports:
              - containerPort: 9200
                name: rest
                protocol: TCP
              - containerPort: 9300
                name: inter-node
                protocol: TCP
              volumeMounts:
              - name: data
                mountPath: /usr/share/elasticsearch/data
              env:
                - name: cluster.name
                  value: k8s-logs
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: node.name
                  value: "$(NODE_NAME).elasticsearch"
                - name: cluster.initial_master_nodes
                  value: "es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch"
                - name: discovery.seed_hosts
                  value: "es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch"
                - name: XPACK_SECURITY_ENABLED
                  value: "true"
                - name: ES_JAVA_OPTS
                  value: "-Xms512m -Xmx512m"
            initContainers:
              - name: fix-permissions
                image: busybox
                command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
                securityContext:
                  privileged: true
                volumeMounts:
                - name: data
                  mountPath: /usr/share/elasticsearch/data
              - name: increase-vm-max-map
                image: busybox
                command: ["sysctl", "-w", "vm.max_map_count=262144"]
                securityContext:
                  privileged: true
              - name: increase-fd-ulimit
                image: busybox
                command: ["sh", "-c", "ulimit -n 65536"]
                securityContext:
                  privileged: true
        volumeClaimTemplates:
          - metadata:
              name: data
              labels:
                app: elasticsearch
            spec:
              accessModes: [ "ReadWriteOnce" ]
              storageClassName: "{{ es.storage.class_name }}"
              resources:
                requests:
                  storage: "{{ es.storage.size }}"

- name: Wait for elasticsearch pods to come up
  shell: kubectl get pods -n kube-logging -o json
  register: kubectl_get_es_pods
  until: >
    kubectl_get_es_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"] or
    kubectl_get_es_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running", "Failed"] or
    kubectl_get_es_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running", "Succeeded"] or
    kubectl_get_es_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running", "Failed", "Succeeded"]
  retries: 720
  delay: 10
