---
- name: Install CertManager
  community.kubernetes.helm:
    chart_ref: vanillastack/cert-manager
    name: cert-manager
    release_namespace: "{{ certmanager.namespace }}"
    create_namespace: true
    values: "{{ lookup('template', 'certmanager.yaml.j2') | from_yaml }}"
    chart_version: "{{certmanager.chartVersion}}"
    wait: true

- name: Copy ClusterIssuer definiton
  template:
    src: clusterissuer.yaml.j2
    dest: /tmp/clusterissuer.yaml
  when:
- name: Create ClusterIssuer
  block:
    - name: Apply ClusterIssuer Issuer
      k8s:
        src: /tmp/clusterissuer.yaml
        state: present
        namespace: "{{ certmanager.namespace }}"
      register: clusterIssuer
  rescue:
    - name: restart cert-manager
      command: "kubectl delete po -n {{certmanager.namespace}} -l app=cert-manager"
    - name: restart cert-manager webhook
      command: "kubectl delete po -n {{certmanager.namespace}} -l app=webhook"
    - name: Wait for pods to be ready
      command: kubectl wait -n {{certmanager.namespace}} --for=condition=Ready pods --timeout=60s --all

- name: Retry ClusterIssuer Issuer
  k8s:
    src: /tmp/clusterissuer.yaml
    state: present
    namespace: "{{ certmanager.namespace }}"
  when: clusterIssuer is not succeeded
  register: clusterIssuerRetry
  until: clusterIssuerRetry is succeeded
  delay: 20
  retries: 60

- name: Cleanup ClusterIssuer Issuer
  file:
    path: /tmp/clusterissuer.yaml
    state: absent
