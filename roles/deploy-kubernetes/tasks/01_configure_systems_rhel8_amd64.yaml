---
- name: Check if distribution is supported
  fail:
    msg: This disribution is currently not supported by VanillaStack
  when: ansible_distribution != 'RedHat'

- name: Preinstall packages
  ansible.builtin.yum:
    update_cache: yes
    name:
      - gnupg
      - python3

- include_tasks: configure_rhel_repos.yaml

- name: Install necessary packages
  ansible.builtin.yum:
    state: present
    update_cache: yes
    name:
      - curl
      - fail2ban
      - python3-dnf-plugin-versionlock # equivalent to "apt mark hold"
      - python3-jmespath
      - git
      - gnupg
      - iproute
      - jq
      - libseccomp
      - lvm2
      - nfs-utils # nfs-common on debian
      - python3-jmespath
      - python3-kubernetes # also install via pip3 since the package is outdated in RHEL repos
      - python3-passlib
      - python3-pip
      - systemd-timesyncd
      - tar
      - vim
      - grubby
      - tc
  register: result
  until: result is not failed
  retries: 10
  delay: 10

- name: Install pip3 kubernetes package
  become: true
  ansible.builtin.pip:
    name:
      - kubernetes==25.3.0

# Install helm through direct download
- name: Install Helm to Master
  become: true
  ansible.builtin.shell: curl -L https://get.helm.sh/helm-{{ kubernetes.helm_version }}-linux-amd64.tar.gz | tar -Ozxf - > /usr/local/bin/helm && chmod +x /usr/local/bin/helm
  register: result
  until: result is not failed
  retries: 10
  delay: 10
  when: "'master' in group_names"

- name: Upgrade OS
  ansible.builtin.yum:
    update_cache: true
    name: '*'
    exclude:
      - "kubelet"
      - "kubeadm"
      - "kubectl"
      - "cri-o"
    state: latest
  register: result
  until: result is not failed
  retries: 10
  delay: 10

- name: configure timesyncd for ntp
  template:
    src: etc/systemd/timesyncd.conf.j2
    dest: /etc/systemd/timesyncd.conf
    mode: 0444
  notify: restart timesyncd
  when: ntp.manage_timesyncd

- name: Uninstall ntp package
  ansible.builtin.yum:
    name: ntp
    state: absent
  when: ntp.manage_timesyncd

- name: Enable fstrim.timer
  systemd:
    name: fstrim.timer
    state: started
    enabled: true

- name: Make sure, domain search is not set
  lineinfile:
    regexp: "^(.*)search(.*)$"
    state: absent
    path: /etc/resolv.conf

- include_tasks: rhel8_kube_crio_install.yaml

- name: Save kubeversion to YAML file
  lineinfile:
    path: /tmp/kubeversion.yml
    regexp: "^(.*)version(.*)$"
    line: "version: {{ kube_version | regex_replace('-[0-9]+', '') }}"
    create: true

- name: Fetch kubeversion.yml
  become: true
  fetch:
    src: "/tmp/kubeversion.yml"
    dest: "/tmp/kubeversion.yml"
    flat: true
  run_once: true

- name: Configure kubelet
  lineinfile:
    path: /etc/default/kubelet
    regexp: "^(.*)KUBELET_EXTRA_ARGS(.*)$"
    line: 'KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint="unix:///var/run/crio/crio.sock"'
    create: true

- include_tasks: configure_crio.yaml

- name: "Check for installed packages"
  package_facts:
    manager: "auto"

- name: Disable Firewall
  systemd:
    name: "{{ item }}"
    masked: true
    enabled: false
    state: stopped
  when: "item in ansible_facts.packages"
  loop:
    - "firewalld"
    - "ufw"

- name: Disable rpcbind
  systemd:
    name: "rpcbind"
    state: stopped
    enabled: false

- name: Copy Fail2ban jail.conf
  template:
    src: etc/fail2ban/jail.conf.j2
    dest: /etc/fail2ban/jail.conf

- name: Enable Fail2ban
  systemd:
    name: "fail2ban"
    enabled: true
    state: restarted

- name: Set nofile soft limit
  community.general.pam_limits:
    limit_type: soft
    limit_item: nofile
    value: 1048576
    domain: "*"

- name: Set nofile hard limit
  community.general.pam_limits:
    limit_type: hard
    limit_item: nofile
    value: 1048576
    domain: "*"

- name: Add api name to hosts file
  lineinfile:
    path: /etc/hosts
    state: present
    line: "{{ loadbalancerIP }} api.{{ clusterTLDomain }}"
  when: loadbalancerIP is defined or loadbalancerIP|trim != ""

- name: Copy disable transparent huge pages service unit file
  copy:
    src: etc/systemd/system/disable-transparent-huge-pages.service
    dest: /etc/systemd/system/disable-transparent-huge-pages.service
    owner: root
    group: root
    mode: 0644

- name: Reload systemd
  systemd:
    daemon_reload: true

- name: Enable and start disable transparent huge pages service
  systemd:
    name: disable-transparent-huge-pages
    state: restarted
    enabled: true

- name: Create hosts file entry
  ansible.builtin.lineinfile:
    path: '/etc/hosts'
    line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
  with_items: 
    - "{{ groups['master'] }}"
    - "{{ groups['worker'] }}"

- name: Set SELinux to disabled
  ansible.posix.selinux:
    state: disabled
    update_kernel_param: yes

- name: Configure RHEL Repos
  ansible.builtin.copy:
    mode: 0644
    owner: root
    src: etc/containers/policy.json
    dest: /etc/containers/policy.json
