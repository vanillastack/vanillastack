global
        log 127.0.0.1   local0
        log 127.0.0.1   local1 notice
        log 127.0.0.1   local0 info
        log-tag haproxy
        maxconn 10000
        chroot /etc/haproxy
        user haproxy
        group haproxy
        daemon

        # Enable stats through socket in order to monitor HAProxy through Zabbix
        #stats socket /run/haproxy.sock mode 666 level user
        #stats timeout 2m

        #Sets the maximum size of the Diffie-Hellman parameters used for generating the ephemeral/temporary Diffie-Hellman key in case of DHE key exchange
        tune.ssl.default-dh-param 1024

        # Disable SSLv3 everywhere
        ssl-default-bind-options no-sslv3

        # Cipher list to use
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

        # Increase TLS session cache size and lifetime to avoid computing too many symmetric keys
        tune.ssl.cachesize 100000
        tune.ssl.lifetime 600

        # Set up a TLS record to match a TCP segment size, in order to improve client side rendering of content:
        tune.ssl.maxrecord 1460

defaults
        log     global

        # Default mode: HTTP
        mode    http
        option  httplog

        # Reduces latency between HAProxy and users closing connections but maintaining keep-alives
        option http-server-close

        option  dontlognull
        retries 3
        option redispatch

        # Max connections
        maxconn 2000

        # Timeouts
        timeout connect 20m
        timeout client  4h
        timeout server 4h

listen stats
        bind *:1936
        # Stats configuration
        stats hide-version
        stats enable
        stats auth username:password
        stats uri /
        stats refresh 30s

frontend kube-api
        bind *:6443
        mode tcp
        # Default backend
        default_backend master

backend master
        mode tcp
        balance roundrobin
        option tcp-check
            timeout server 300000
{% for host in groups['master'] %}
        server {{ host }} {{ hostvars[host].ansible_host }}:8443 check check
{% endfor %}

frontend worker-http
        bind *:80
        mode tcp
        # Default backend
        default_backend worker-http

backend worker-http
        mode tcp
        balance roundrobin
        option tcp-check
            timeout server 300000
{% for host in groups['worker'] %}
        server {{ host }} {{ hostvars[host].ansible_host }}:{{ ingress_http_port | default(30080) }} check
{% endfor %}

frontend worker-https
        bind *:443
        mode tcp
        # Default backend
        default_backend worker-https

backend worker-https
        mode tcp
        balance roundrobin
        option tcp-check
            timeout server 300000
{% for host in groups['worker'] %}
        server {{ host }} {{ hostvars[host].ansible_host }}:{{ ingress_https_port | default(30443) }} check
{% endfor %}
