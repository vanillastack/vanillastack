autoCleanup: false

console:
  apiKeysEnabled: admin_only
  artifactHubEnabled: true
  autoRegisterCF: "https://api.{{ cloudfoundry.coreDomain }}"
  backendLogLevel: info
  cookieDomain: null
  deploymentAnnotations: {}
  deploymentExtraLabels: {}
  jobAnnotations: {}
  jobExtraLabels: {}
  kubeDashboardImage: null
    # localAdminPassword: {{ stratos.adminpassword }}
  nodeSelector: {}
  podAnnotations: {}
  podExtraLabels: {}
  replicaCount: 1
  reportsVolumeDisabled: false
  reportsVolumeSize: 10Gi
  service:
    annotations: {}
    externalIPs: []
    externalName: null
    extraLabels: {}
    http:
      enabled: true
      servicePort: 80
    ingress:
      ## If true, Ingress will be created
      enabled: {{ ingress.enabled }}
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 1024m
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        cert-manager.io/cluster-issuer: {{ LE_issuer_name }}
        kubernetes.io/tls-acme: "true"
      extraLabels: {}
    loadBalancerSourceRanges: []
    servicePort: 443
    type: ClusterIP
  sessionStoreSecret: null
  sslCiphers: null
  sslProtocols: null
  ssoLogin: true
  ssoOptions: null
  statefulSetAnnotations: {}
  statefulSetExtraLabels: {}
  techPreview: false
  templatesConfigMapName: null
  tlsSecretName: null
  ui:
    listAllowLoadMaxed: false
    listMaxSize: null
  userInviteSubject: null
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: 
  
uaa:
  # UAA endpoint (e.g. https://uaa.domain:2793)
  endpoint: https://keycloak.test.vanillastack.cloudical.net/auth/realms/test.vanillastack.cloudical.net/protocol/openid-connect
  # Client to use when authenticating (default is 'cf')
  consoleClient: stratos.test.vanillastack.cloudical.net
  # Client Secret to use when authenticating (default is '')
  consoleClientSecret: 91fe35f8-2cc4-4d23-88fa-847a87b4e4a9
  # Scope that determines if a user is a Stratos admin
  consoleAdminIdentifier: admin
  # Skip SSL validation when communicating with the UAA
  skipSSLValidation: true

consoleVersion: 4.4.0-bc65c315c

kube:
  # Whether RBAC is enabled in the Kubernetes cluster
  auth: "rbac"
{% if commercial.enabled %}
  organization: vanillastack
{% else %}
  organization: splatform
{% endif %}
  registry:
{% if commercial.enabled %}
    hostname: {{repositories.registry_commercial}}
{% else %}
    hostname: docker.io
{% endif %}
    username:
    password:
    email: default
