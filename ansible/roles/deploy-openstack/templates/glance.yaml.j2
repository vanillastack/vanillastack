---
{% if openstack.release == "stein" and commercial.enabled %}
images:
  tags:
    test: {{repositories.registry_commercial}}/vanillastack/xrally-openstack:2.0.0
    glance_storage_init: {{repositories.registry_commercial}}/vanillastack/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: {{repositories.registry_commercial}}/vanillastack/glance:stein-ubuntu_bionic
    db_init: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    glance_db_sync: {{repositories.registry_commercial}}/vanillastack/glance:stein-ubuntu_bionic
    db_drop: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    ks_user: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    ks_service: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    ks_endpoints: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    rabbit_init: {{repositories.registry_commercial}}/vanillastack/rabbitmq:3.7-management
    glance_api: {{repositories.registry_commercial}}/vanillastack/glance:stein-ubuntu_bionic
    glance_registry: {{repositories.registry_commercial}}/vanillastack/glance:stein-ubuntu_bionic
    bootstrap: {{repositories.registry_commercial}}/vanillastack/heat:stein-ubuntu_bionic
    dep_check: {{repositories.registry_commercial}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{repositories.registry_commercial}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "stein" and commercial.enabled != true %}
images:
  tags:
    test: docker.io/xrally/xrally-openstack:2.0.0
    glance_storage_init: docker.io/openstackhelm/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: docker.io/openstackhelm/glance:stein-ubuntu_bionic
    db_init: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    glance_db_sync: docker.io/openstackhelm/glance:stein-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_service: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_endpoints: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    glance_api: docker.io/openstackhelm/glance:stein-ubuntu_bionic
    glance_registry: docker.io/openstackhelm/glance:stein-ubuntu_bionic
    # Bootstrap image requires curl
    bootstrap: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled %}
images:
  tags:
    test: {{repositories.registry_commercial}}/vanillastack/xrally-openstack:2.0.0
    glance_storage_init: {{repositories.registry_commercial}}/vanillastack/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: {{repositories.registry_commercial}}/vanillastack/glance:train-ubuntu_bionic
    db_init: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    glance_db_sync: {{repositories.registry_commercial}}/vanillastack/glance:train-ubuntu_bionic
    db_drop: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    ks_user: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    ks_service: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    ks_endpoints: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    rabbit_init: {{repositories.registry_commercial}}/vanillastack/rabbitmq:3.7-management
    glance_api: {{repositories.registry_commercial}}/vanillastack/glance:train-ubuntu_bionic
    glance_registry: {{repositories.registry_commercial}}/vanillastack/glance:train-ubuntu_bionic
    bootstrap: {{repositories.registry_commercial}}/vanillastack/heat:train-ubuntu_bionic
    dep_check: {{repositories.registry_commercial}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{repositories.registry_commercial}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "train" and commercial.enabled != true %}
images:
  tags:
    test: docker.io/xrally/xrally-openstack:2.0.0
    glance_storage_init: docker.io/openstackhelm/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: docker.io/openstackhelm/glance:train-ubuntu_bionic
    db_init: docker.io/openstackhelm/heat:train-ubuntu_bionic
    glance_db_sync: docker.io/openstackhelm/glance:train-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:train-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:train-ubuntu_bionic
    ks_service: docker.io/openstackhelm/heat:train-ubuntu_bionic
    ks_endpoints: docker.io/openstackhelm/heat:train-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    glance_api: docker.io/openstackhelm/glance:train-ubuntu_bionic
    glance_registry: docker.io/openstackhelm/glance:train-ubuntu_bionic
    bootstrap: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled %}
images:
  tags:
    test: {{repositories.registry_commercial}}/vanillastack/xrally-openstack:2.0.0
    glance_storage_init: {{repositories.registry_commercial}}/vanillastack/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: {{repositories.registry_commercial}}/vanillastack/glance:ussuri-ubuntu_bionic
    db_init: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    glance_db_sync: {{repositories.registry_commercial}}/vanillastack/glance:ussuri-ubuntu_bionic
    db_drop: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    ks_user: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    ks_service: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    ks_endpoints: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    rabbit_init: {{repositories.registry_commercial}}/vanillastack/rabbitmq:3.7-management
    glance_api: {{repositories.registry_commercial}}/vanillastack/glance:ussuri-ubuntu_bionic
    glance_registry: {{repositories.registry_commercial}}/vanillastack/glance:ussuri-ubuntu_bionic
    bootstrap: {{repositories.registry_commercial}}/vanillastack/heat:ussuri-ubuntu_bionic
    dep_check: {{repositories.registry_commercial}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{repositories.registry_commercial}}/vanillastack/docker:17.07.0
{% endif %}
{% if openstack.release == "ussuri" and commercial.enabled != true %}
images:
  tags:
    test: docker.io/xrally/xrally-openstack:2.0.0
    glance_storage_init: docker.io/openstackhelm/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: docker.io/openstackhelm/glance:ussuri-ubuntu_bionic
    db_init: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    glance_db_sync: docker.io/openstackhelm/glance:ussuri-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    ks_service: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    ks_endpoints: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    glance_api: docker.io/openstackhelm/glance:ussuri-ubuntu_bionic
    glance_registry: docker.io/openstackhelm/glance:ussuri-ubuntu_bionic
    bootstrap: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/docker:17.07.0
{% endif %}
{% if openstack.release == "victoria" and commercial.enabled %}
images:
  tags:
    test: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-rally:victoria_20201215
    glance_storage_init: {{repositories.registry_commercial}}/vanillastack/ceph-config-helper:latest-ubuntu_bionic
    glance_metadefs_load: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-glance-base:victoria_20201215
    db_init: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    glance_db_sync: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-glance-base:victoria_20201215
    db_drop: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    ks_user: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    ks_service: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    ks_endpoints: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    rabbit_init: {{repositories.registry_commercial}}/vanillastack/rabbitmq:3.7-management
    glance_api: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-glance-api:victoria_20201215
    glance_registry: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-glance-base:victoria_20201215
    bootstrap: {{repositories.registry_commercial}}/vanillastack/ubuntu-source-heat-base:victoria_20201215
    dep_check: {{repositories.registry_commercial}}/vanillastack/kubernetes-entrypoint:v1.0.0
    image_repo_sync: {{repositories.registry_commercial}}/vanillastack/docker:17.07.0
{% endif %}
storage: {{openstack.glance.defaultBackend}}
pod:
  replicas:
    api: {{openstack.glance.api.replicas}}
    registry: {{openstack.glance.registry.replicas}}
conf:
{% if openstack.glance.rbd.enabled %}
  software:
    rbd:
      rbd_store_pool_app_name: {{openstack.glance.rbd.cephAppName}}
{% if openstack.ceph.enabled %}
  ceph:
    monitors: rook-ceph-mon-a.{{rook.namespace}}.svc.cluster.local:6789,rook-ceph-mon-b.{{rook.namespace}}.svc.cluster.local:6789,rook-ceph-mon-c.{{rook.namespace}}.svc.cluster.local:6789
{% endif %}
{% endif %}
  glance:
    DEFAULT:
      enable_v1_api: {{openstack.glance.api.v1Enabled}}
      enable_v2_registry: {{openstack.glance.registry.v2Enabled}}
{% if openstack.glance.rbd.enabled %}
      show_image_direct_url: {{openstack.glance.rbd.showImageDirectUrl}}
    glance_store:
      rbd_store_pool: {{openstack.glance.rbd.rbdPool}}
      rbd_store_user: {{openstack.glance.rbd.rbdUser}}
secrets:
  rbd: images-rbd-keyring
{% endif %}
endpoints:
  image:
    host_fqdn_override:
      public:
        host: {{openstack.glance.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        tls:
          key: dummy
          crt: dummy
{% if LE_issuer_name == "letsencrypt-staging" %}
          ca: |
{{tls.staging.rootCACert |b64decode| indent( width=12, indentfirst=True) }}
{% elif LE_issuer_name == "letsencrypt-prod" %}
          ca: |
{{tls.prod.rootCACert | b64decode | indent( width=12, indentfirst=True) }}
{% elif LE_issuer_name == "certmanager-selfsigned" %}
          ca: |
{{selfSignedCA | b64decode | indent( width=12, indentfirst=True) }}
{% endif %}
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
    port:
      api:
        public: 443
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
    certs:
      glance:
        secretName: glance-tls
        issuerRef:
          name: openstack-{{LE_issuer_name}}
          kind: Issuer
{% endif %}
  identity:
    hosts:
      default: keystone-api
      internal: keystone-api
    auth:
{% if openstack.tls.enabled %}
      cacert: /tmp/openstack_ca.crt
{% endif %}
      admin:
        region_name: {{openstack.region}}
        username: admin
        password: {{openstack.keystone.auth.admin.password}}
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      glance:
        role: admin
        region_name: {{openstack.region}}
        username: glance
        password: {{openstack.glance.auth.service.password}}
        project_name: service
        user_domain_name: service
        project_domain_name: service
      test:
        role: admin
        region_name: {{openstack.region}}
        username: glance-test
        password: {{openstack.glance.auth.glanceTest.password}}
        project_name: test
        user_domain_name: service
        project_domain_name: service
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
        secret:
          tls:
            internal: mariadb-tls-direct
      glance:
        username: glance
        password: {{openstack.glance.auth.db.password}}
  oslo_messaging:
    auth:
      admin:
        username: rabbitmq
        password: {{openstack.rabbitmq.auth.admin.password}}
      glance:
        username: glance
        password: {{openstack.glance.auth.messaging.password}}
  ceph_object_store:
    name: radosgw
    namespace: {{openstack.namespace}}
    auth:
      glance:
        username: glance
        password: {{openstack.glance.auth.radosgw.password}}
        tmpurlkey: supersecret
network:
  api:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        cert-manager.io/issuer: "openstack-{{LE_issuer_name}}"
{% endif %}

manifests:
  deployment_registry: true
  ingress_registry: true
  pdb_registry: true
  service_ingress_registry: true
  secret_ingress_tls: false
