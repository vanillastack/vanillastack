---
- name: create inventory for scaling
  hosts: master[0]
  roles:
    - role: deploy-kubernetes
      action: 00_create_new_inventory

- name: Wait for nodes
  hosts: install_nodes,install_master,master[0]
  become: false
  gather_facts: no
  roles:
    - role: wait-for-nodes

- name: Secure Servers (Installing Polyverse)
  hosts: install_nodes,install_master
  become: true
  gather_facts: true
  roles:
    - role: deploy-polyverse
      when: polyverse.enabled
 
- name: Configure Servers
  hosts: install_nodes,install_master
  become: true
  gather_facts: true
  roles:
    - role: deploy-kubernetes
      action: 01_configure_systems
      when: ansible_distribution != 'Debian'
    - role: deploy-kubernetes
      action: 01_configure_systems_debian_amd64
      when: ansible_distribution == 'Debian' and ansible_architecture == "x86_64"
    - role: deploy-kubernetes
      action: 01_configure_systems_debian_ppc64le
      when: ansible_distribution == 'Debian' and ansible_architecture == "ppc64le"

- name: Install Keepalived
  hosts: haproxy[0]
  become: true
  gather_facts: true
  vars:
    keepalived_MASTER_SLAVE: MASTER
    keepalived_priority: 110
  roles:
    - role: install-haproxy
      action: 01_install_keepalived
      when: not create_extLB and make_ha

- name: Install Keepalived
  hosts: haproxy[1:]
  become: true
  gather_facts: true
  roles:
    - role: install-haproxy
      action: 01_install_keepalived
      when: not create_extLB and make_ha

- name: Install HaProxy
  hosts: haproxy
  become: true
  gather_facts: true
  roles:
    - role: install-haproxy
      action: 02_install_haproxy
      when: not create_extLB

- name: Configure Kube Systems
  hosts: install_nodes,install_master
  become: true
  gather_facts: false
  roles:
    - role: deploy-kubernetes
      action: 02_configure_cluster

        #- name: generate secrets
        #  hosts: master[0]
        #  gather_facts: yes
        #  roles:
        #    - role: deploy-kubernetes
        #      action: 02-1-generate-certificate

- name: Init KubeCluster
  hosts: install_master[0]
  gather_facts: true
  roles:
    - role: deploy-kubernetes
      action: 03_deploy_kubernetes

- name: generate secrets
  hosts: master[0]
  gather_facts: false
  roles:
    - role: deploy-kubernetes
      action: 02-1-generate-certificate

- name: Add Master to KubeCluster
  hosts: install_master[1:]
  become: true
  gather_facts: no
  roles:
    - role: deploy-kubernetes
      action: 04_add_nodes

- name: Add worker to KubeCluster
  hosts: install_nodes
  become: true
  gather_facts: no
  roles:
    - role: deploy-kubernetes
      action: 05_add_worker

- name: create folder for config
  hosts: localhost
  vars:
    ansible_connection: local
  tasks:
    - name: make sure local uuid directory exists
      file:
        state: directory
        path: "/tmp/ansible/{{ cluster_uuid }}"
        recurse: yes

- name: Gather facts
  hosts: master,worker
  become: false
  gather_facts: yes

- name: Deploy Networking
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
    - role: deploy-kubernetes
      action: "06_configure_network_{{cluster_sdn|default('cilium')}}"

- name: Label Nodes
  hosts: master[0]
  gather_facts: yes
  roles:
    - role: deploy-kubernetes
      action: 07_label_nodes

- name: Deploy Nginx-Ingress
  hosts: master[0]
  become: false
  gather_facts: false
  roles:
    - role: prepare-registry
      when: ingress.enabled
    - role: deploy-ingress-nginx
      when: ingress.enabled

- name: Deploy Rook
  hosts: master[0]
  become: false
  gather_facts: false
  roles:
    - role: prepare-registry
    - role: deploy-rook
      when: vanillastorageprovider == "rook"

- name: Deploy Cert Manager
  hosts: master[0]
  become: false
  gather_facts: true
  roles:
    - role: prepare-registry
      when: certmanager.enabled
    - role: deploy-certmanager
      when: certmanager.enabled

- name: Deploy Keycloak
  hosts: master[0]
  become: false
  gather_facts: no
  roles:
    - role: deploy-keycloak
      when: vanillaservices.keycloak_enabled

- name: Deploy OpenStack
  hosts: master[0]
  become: false
  gather_facts: no
  roles:
    - role: prepare-registry
      when: vanillaservices.openstack_enabled
    - role: deploy-openstack
      when: vanillaservices.openstack_enabled

- name: install K8S Dashboard
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.dashboard_enabled
    - role: install-kubedashboard
      when: vanillaservices.dashboard_enabled

- name: Deploy cloudfoundry
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.stratos_enabled
    - role: install-cloudfoundry
      when: vanillaservices.cloudfoundry_enabled

- name: install stratos
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.stratos_enabled
    - role: install-stratos
      when: vanillaservices.stratos_enabled

- name: Deploy efk
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.loggingStack_enabled
    - role: install-efk
      action: init
      when: vanillaservices.loggingStack_enabled
    - role: install-efk
      action: es_deploy
      when: vanillaservices.loggingStack_enabled
    - role: install-efk
      action: kibana_deploy
      when: vanillaservices.loggingStack_enabled
    - role: install-efk
      action: "{{ efkstack.logaggregator.name }}_deploy"
      when: vanillaservices.loggingStack_enabled
    - role: install-efk
      action: create-client
      when: vanillaservices.loggingStack_enabled and vanillaservices.keycloak_enabled

- name: Deploy Postgres Operator
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.guacamole_enabled
    - role: deploy-postgres-operator
      when: vanillaservices.pgOperator_enabled

- name: install guacamole
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.guacamole_enabled
    - role: install-guacamole
      when: vanillaservices.guacamole_enabled

- name: Deploy Harbor
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.harbor_enabled
    - role: deploy-harbor
      when: vanillaservices.harbor_enabled

- name: Deploy KubeVirt
  hosts: master[0]
  become: false
  gather_facts: false
  roles:
    - role: prepare-registry
      when: vanillaservices.kubevirt_enabled
    - role: deploy-kubevirt
      action: operator
      when: vanillaservices.kubevirt_enabled

- name: Deploy KubeVirt CLI
  hosts: master[0]
  become: true
  gather_facts: false
  roles:
    - role: deploy-kubevirt
      action: virtctl
      when: vanillaservices.kubevirt_enabled

- name: install moodle
  hosts: master[0]
  gather_facts: true
  roles:
    - role: prepare-registry
      when: vanillaservices.moodle_enabled
    - role: install-moodle
      when: vanillaservices.moodle_enabled

- name: install monitoring
  hosts: master[0]
  gather_facts: true
  roles:
  - role: install-monitoring
    action: operator
    when: vanillaservices.monitoring_enabled
  - role: install-monitoring
    action: create-client
    when: vanillaservices.monitoring_enabled and vanillaservices.keycloak_enabled


- name: install redis cluster
  hosts: master[0]
  gather_facts: false
  roles:
  - role: install-redis-cluster
    when: vanillaservices.redis_enabled
